# The Docker image that will be used to build your app
image: python:3.14.0b4-bookworm

stages:
  - test
  - on_failure_test
  - deploy
  - prepare
  - release

tests:
  stage: test
  script:
    - echo "Testing."
    - python3 -m http.server 8000 --directory public &
    - sleep 2
    - curl --fail http://localhost:8000
    #- exit 1 # Simulating a failed test

ticket_generation:
  stage: on_failure_test
  when: on_failure
  script:
    - echo "Test job failed. Preparing to create a GitLab issue..."
    - pip install python-gitlab
    - python create_failure_issue.py

pages:
  stage: deploy
  script:
    - echo "Copying static files for GitLab Pages deployment."
  artifacts:
    paths:
    - public

# Testing
prepare_job:
  stage: prepare
  image: alpine:latest
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  variables:
    GIT_DEPTH: 0
  before_script:
    - apk update
    - apk add curl tar
  script:
    # 1. Download and extract git-cliff
    - GCL_VERSION="2.2.2" # Check for the latest version on GitHub
    - curl -L "https://github.com/orhun/git-cliff/releases/download/v${GCL_VERSION}/git-cliff-${GCL_VERSION}-x86_64-unknown-linux-musl.tar.gz" | tar xz
    
    # 2. Run git-cliff to generate notes for the new tag
    - mv git-cliff-*/git-cliff .
    - chmod +x git-cliff
        # --- ADD THESE DEBUGGING LINES ---
    - ls -la
    - cat cliff.toml
    - echo "--------------------------------------"
    # --- END OF DEBUGGING LINES ---
    - ./git-cliff --config cliff.toml --latest > release_notes.md
    
    # 3. Verify that the file was created
    - echo "--- Generated Release Notes ---"
    - cat release_notes.md
    - echo "-----------------------------"
  artifacts:
    paths:
    - release_notes.md

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  variables:
    GIT_DEPTH: 0
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'Container Image $CI_COMMIT_TAG'
          url: "https://$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"
